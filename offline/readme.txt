# Tested on Ubuntu 16.04LTS amdx64 platform

# Put the gpsvario into wifi server mode, connect to the WiFi access point
# "ESP32GpsVario", and download the binary datalog file using the url  http://192.168.14.1/datalog

# The datalog could contain a combination of high-speed IBG (IMU+Baro+GPS) data logs and 
# normal GPS track logs. Use the logsplit software to split the file into separate IBG and GPS
# data logs.

# testmar2 is an example of offline analysis of a high-speed data log. 

# gpslog2gpx will convert a GPS binary log file into a gpx text file that you
# can load in Google Earth or other GPS track visualization software.

# testroute tests the validity of a FormatGEO waypoint file generated by xcplanner
# (xcplanner.appspot.com). xcplanner does not specify waypoint radii. You can edit the
# .wpt file to add a waypoint radius (in meters) at the end of a waypoint description line. 
# If there is no waypoint radius information for a waypoint, the gpsvario will assign a 
# user-configurable waypoint radius. Once you have validated the .wpt file, you can upload
# it to the gpsvario using the url http://192.168.4.1, select the upload file option.

gcc -o gpslog2gpx gpslog2gpx.c
./gpslog2gpx ~/Downloads/datalog

gcc -o ibglog2gpx ibglog2gpx.c
./ibglog2gpx ~/Downloads/datalog

gcc -o parseIBG parseIBG.c
./parseIBG ~/Downloads/datalog

gcc -o ibglogsplit ibglogsplit.c
./ibglogsplit ~/Downloads/datalog 300     

# called with 300mS argument, so timestamps that are separated by more than 300mS result in a
# different log file being generated. Output files are ~/Downloads/datalog_00, ... 

gcc -o ibglog2quat ibglog2quat.c imu.c -lm
./ibglog2quat ~/Downloads/datalog

gcc -o logsplit logsplit.c
./logsplit ~/Downloads/datalog 300     

# separates ibg logs wherever the timestamp of two consecutive logs differs by more than the specified value
# milliseconds (e.g. 300). Also splits wherever there is a change from ibg log to gps track log or vice versa.

gcc -o testmar2 testmar2.c kalmanfilter3.c imu.c ringbuf.c -lm
./testmar2 ~/Downloads/datalog-mar2

gcc -o testroute testroute.c -lm
./testroute example.wpt
